[{"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\index.js":"1","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\app.js":"2","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\home.js":"3","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\logout\\logout.js":"4","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\login\\login.js":"5","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\signup\\signup.js":"6","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\editor\\editor.js":"7","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\readblogs\\readblogs.js":"8","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\component\\body\\body.js":"9","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\component\\header\\header.js":"10"},{"size":246,"mtime":1611151886937,"results":"11","hashOfConfig":"12"},{"size":790,"mtime":1611838518389,"results":"13","hashOfConfig":"12"},{"size":230,"mtime":1611151886936,"results":"14","hashOfConfig":"12"},{"size":627,"mtime":1611841730111,"results":"15","hashOfConfig":"12"},{"size":2481,"mtime":1611844387260,"results":"16","hashOfConfig":"12"},{"size":3190,"mtime":1611844595022,"results":"17","hashOfConfig":"12"},{"size":5770,"mtime":1611765192858,"results":"18","hashOfConfig":"12"},{"size":2632,"mtime":1611837620481,"results":"19","hashOfConfig":"12"},{"size":192,"mtime":1611151886933,"results":"20","hashOfConfig":"12"},{"size":1692,"mtime":1611648831568,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1v4ddmc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\index.js",[],["44","45"],"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\app.js",[],"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\home.js",[],"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\logout\\logout.js",[],"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\login\\login.js",[],"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\signup\\signup.js",[],"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\editor\\editor.js",["46"],"import React from \"react\";\r\nimport { DraftailEditor } from \"draftail\";\r\nimport {  convertToRaw, EditorState } from \"draft-js\";\r\nimport { ItalicButton, BoldButton, UnderlineButton,UnorderedListButton,HeadlineOneButton,HeadlineTwoButton,HeadlineThreeButton,OrderedListButton } from \"draft-js-buttons\";\r\nimport createInlineToolbarPlugin from \"draft-js-inline-toolbar-plugin\";\r\nimport createSideToolbarPlugin from \"draft-js-side-toolbar-plugin\";\r\nimport createUndoPlugin from '@draft-js-plugins/undo';\r\nimport \"./editor.css\";\r\nimport \"draft-js/dist/Draft.css\";\r\nimport \"draftail/dist/draftail.css\";\r\nimport \"draft-js-inline-toolbar-plugin/lib/plugin.css\";\r\nimport \"draft-js-side-toolbar-plugin/lib/plugin.css\";\r\nimport Header from './../../component/header/header'\r\nimport {Redirect} from \"react-router-dom\"\r\nimport Login from './../login/login'\r\nconst inlineToolbarPlugin = createInlineToolbarPlugin();\r\nconst { InlineToolbar } = inlineToolbarPlugin;\r\nconst sideToolbarPlugin = createSideToolbarPlugin();\r\nconst { SideToolbar } = sideToolbarPlugin;\r\nconst undoPlugin = createUndoPlugin();\r\n// const { UndoButton, RedoButton } = undoPlugin;\r\nconst plugins = [inlineToolbarPlugin, sideToolbarPlugin,undoPlugin];\r\n \r\nclass Editor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // now testing a change in state..... for taking input from fetch funtion\r\n        this.state = {\r\n            editorState: EditorState.createEmpty(),\r\n            isAuthen : true\r\n        };\r\n        this.changeState = this.changeState.bind(this);\r\n    }\r\n    changeState(state) {\r\n        this.setState({\r\n            editorState: state\r\n        });\r\n    }\r\n   \r\n     check= ()=> {\r\n       \r\n        fetch(\"http://localhost:4000/readblogs\",{\r\n            credentials:\"include\",\r\n            method:\"GET\",\r\n            headers:{\r\n                \"Content-type\":\"application/json;charset=utf-8\"\r\n            }\r\n            })\r\n            .then(result => result.json())\r\n            .then(result =>{\r\n                if(result.err===\"true\")\r\n                {\r\n                    this.setState({\r\n                        isAuthen:false\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        \r\n        if(this.state.isAuthen === false){\r\n           alert(\"You must login\")  \r\n          return (<div>\r\n           <Redirect to=\"/login\"/>\r\n          </div>\r\n          )\r\n        }else{\r\n            console.log(\"user is logged in \")\r\n        }\r\n     }\r\n\r\n    submitHandler = () => {\r\n        const data = {\"content\":convertToRaw(this.state.editorState.getCurrentContent())};\r\n        console.log(data.content);\r\n        fetch(\"http://localhost:4000/editor\",{\r\n            credentials:\"include\",\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(result => result.json())\r\n        .then(result =>{\r\n            console.log(result);\r\n            if(result.err===\"true\"){\r\n                alert(\"Redirect user to login page\");\r\n               \r\n            }\r\n            else{\r\n                alert(\"your data has been successfully saved \");\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n       <div>\r\n           {this.check()}\r\n            <Header />\r\n            <div className=\"App-editor\" >\r\n                <DraftailEditor\r\n                    editorState={this.state.editorState}\r\n                    onChange={this.changeState}\r\n                    placeholder=\"Tell your story...\"\r\n                    plugins={plugins}\r\n                />\r\n                <InlineToolbar>\r\n                    {\r\n                        externalProps => (\r\n                            <>\r\n                                <ItalicButton {...externalProps} />\r\n                                <BoldButton {...externalProps} />\r\n                                <UnderlineButton {...externalProps} />\r\n                                <UnorderedListButton {...externalProps} />\r\n                                <HeadlineOneButton {...externalProps} />\r\n                                <HeadlineTwoButton {...externalProps} />\r\n                                <HeadlineThreeButton {...externalProps} />\r\n                                <OrderedListButton {...externalProps} />\r\n                            </>\r\n                        )\r\n                    }\r\n                </InlineToolbar>\r\n                <SideToolbar>\r\n                    {\r\n                        externalProps => (\r\n                            <>\r\n                                <ItalicButton {...externalProps} />\r\n                                <BoldButton {...externalProps} />\r\n                                <UnderlineButton {...externalProps} />\r\n                                <UnorderedListButton {...externalProps} />\r\n                                <HeadlineOneButton {...externalProps} />\r\n                                <HeadlineTwoButton {...externalProps} />\r\n                                <HeadlineThreeButton {...externalProps} />\r\n                                <OrderedListButton {...externalProps} />\r\n                            </>\r\n                        )\r\n                    }\r\n                </SideToolbar>\r\n                 <div className=\"toolbox my-3\">\r\n                    {/* <UndoButton />\r\n                    <RedoButton /> */}\r\n                    <button className=\"btn btn-outline-dark\" onClick={this.submitHandler}>Post</button>\r\n                 </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default Editor;","C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\container\\readblogs\\readblogs.js",[],"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\component\\body\\body.js",[],"C:\\Users\\Kartikey\\Desktop\\stoPedia\\frontend\\src\\component\\header\\header.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":15,"column":8,"nodeType":"53","messageId":"54","endLine":15,"endColumn":13},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]